terminal:
	mkdir django_rest_vue_template
	cd django_rest_vue_template
	python -m venv ./venv
	venv\Scripts\activate venv
	pip install django
	pip install djangorestframework
	pip install django-cors-headers
	django-admin startproject project_name .
	python manage.py startapp app_name
put these into project_name\settings.py in INSTALLED_APPS:
    'rest_framework',
    'corsheaders',
    'app_name',
put this new section under INSTALLED_APPS:
	AUTH_USER_MODEL = 'app_name.User'
put this into project_name\settings.py in MIDDLEWARE:	
    'corsheaders.middleware.CorsMiddleware',
put this new section under MIDDLEWARE:
	CORS_ORIGIN_WHITELIST = (
		'http://127.0.0.1:8080',
	)
put this is app_name\models.py:
	from django.db import models
	from django.contrib.auth.models import AbstractUser
	class User(AbstractUser):
		pass
put this in app_name\admin.py:
	from django.contrib import admin
	from .models import User
	admin.site.register(User)
create app_name\serializers.py, and put in:
	from rest_framework import serializers
	from .models import User
	class UserSerializer(serializers.ModelSerializer):
		class Meta:
			model = User
			fields = '__all__'
create app_name\viewsets.py, and put in:
	from rest_framework import viewsets, filters
	from .models import User
	from .serializers import UserSerializer
	class UserViewSet(viewsets.ModelViewSet):
		queryset = User.objects.all()
		serializer_class = UserSerializer
		filter_backends = (filters.SearchFilter,)
		search_fields = ['=email', '=username',]
create project_name\routers.py, and put in:
	from rest_framework import routers
	from app_name.viewsets import UserViewSet
	router = routers.DefaultRouter()
	router.register(r'user', UserViewSet)
put this in project_name\urls.py:
	from django.contrib import admin
	from django.urls import path, include
	from .routers import router
	urlpatterns = [
		path('admin/', admin.site.urls),
		path(f'api/', include(router.urls)),
	]
terminal:
	python manage.py makemigrations
	python manage.py migrate
	python manage.py createsuperuser
	python manage.py runserver
go to http://127.0.0.1:8000/admin/ to see the admin panel
go to http://127.0.0.1:8000/api/ to see the api
your Django backend and REST API are now setup
terminal:
	vue init webpack frontend
	cd frontend
	npm install -g vue-cli
	npm install --save axios
input what you want. by default, just hit enter for everything except these specifics:
	Install vue-router? Y
	Use ESLint to lint your code? Y
	Set up unit tests? N
	Setup e2e tests with Nightwatch? N
put this in frontend\src\components\HelloWorld.vue:
	<template>
	  <div>
		<button v-on:click.prevent="getuser">Get user by username</button>
		<button v-on:click.prevent="postuser">Post new user with username</button><br>
		<input v-model="input_username" placeholder="input username"/><br>
		<button v-on:click.prevent="goToPage2">Go to Page 2</button>
		<h1 v-if="username !== null">{{username}}</h1>
	  </div>
	</template>
	<script>
	import axios from 'axios'
	export default {
	  name: 'HelloWorld',
	  data () {
		return {
		  input_username: null,
		  username: null,
		}
	  },
	  methods: {
		async getuser () {
		  await axios
			.get('http://127.0.0.1:8000/api/user/?search=' + this.input_username)
			.then(response => (
			  this.username = response.data[0].username
			))
			.catch(error => (
			  console.log(error),
			  this.username = null
			))
		  console.log(this.username)
		},
		async postuser () {
		  await axios
			.post('http://127.0.0.1:8000/api/user/', {
			  username: this.input_username,
			  password:'123',
			})
			.then(response => (
			  this.username = response.data.username
			))
			.catch(error => (
			  console.log(error),
			  this.username = null
			))
		  console.log(this.username)
		},
		goToPage2 () {
		  this.$router.push({
			name: 'Page2',
			params: {
			  info: this.input_username
			},
		  })
		},
	  },
	}
	</script>
	<style scoped>
	</style>
create frontend\src\components\Page2.vue, and put in:
	<template>
	  <div>
		<h1 v-if="info !== null">{{info}}</h1>
	  </div>
	</template>
	<script>
	import axios from 'axios'
	export default {
	  name: 'Page2',
	  data () {
		return {
		  info: this.$route.params.info,
		}
	  },
	  methods: {
	  },
	}
	</script>
	<style scoped>
	</style>
change frontend\src\router\index.js to:
	import Vue from 'vue'
	import Router from 'vue-router'
	import HelloWorld from '@/components/HelloWorld'
	import Page2 from '@/components/Page2'
	Vue.use(Router)
	export default new Router({
	  mode: 'history',
	  routes: [
		{
		  path: '/',
		  name: 'HelloWorld',
		  component: HelloWorld
		},
		{
			path: '/page2/',
			name: 'Page2',
			component: Page2
		},
	  ]
	})
terminal:
	cd frontend
	npm run dev
go to http://127.0.0.1:8080/ to see the website
post new users and get users to see its connected to the backend through the API
try sending something through to page 2 to see the router is working
your Vue.js frontend is now setup
create a git repository online, and note the URL, and include readme
terminal:
	cd ..
	git init
	git add -- . :!venv
	git commit -m "initial commit"
	git branch -m master main
	git remote add origin URL
	git pull origin main --allow-unrelated-histories
	git push -u origin main
your git is now setup
DONE!
